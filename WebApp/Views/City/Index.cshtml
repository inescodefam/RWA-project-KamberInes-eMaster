@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model WebApp.Models.CityIndexVM
@{
    ViewData["Title"] = "Cities";

    var pageSizeList = new List<SelectListItem>
    {
        new SelectListItem { Value = "10", Text = "10" },
        new SelectListItem { Value = "20", Text = "20" },
        new SelectListItem { Value = "50", Text = "50" }
    };
}
<h2>Cities</h2>

<form asp-action="Create" method="post" class="mb-3 d-flex col-md-10">
    <input asp-for="Name" class="form-control col-md-8" placeholder="Enter city name" />
    <button type="submit" class="btn btn-success col-md-2 mx-3">Add new city</button>
</form>

<form asp-action="Index" method="get" class="mb-3 row  align-items-center">
    <div class="col-md-4 row">
        <div class="col-auto mt-1">
        <label asp-for="Name"></label>
        </div>
        <div class="col-auto">
        <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control" placeholder="Search cities..." />
        </div>
    </div>
    <div class="col-md-2">
        <select asp-for="PageSize" asp-items="pageSizeList" class="form-select" onchange="this.form.submit()"></select>
    </div>
    <div class="col-md-2">
        <button type="submit" class="btn btn-primary">Search</button>
    </div>
</form>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>City Name</th>
            <th style="width:300px">Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var city in Model.Cities)
        {
            <tr>
                <td>@city.Name</td>
                <td >
                    <div class="d-flex gap-2 align-items-center">
                    <form asp-action="Delete" asp-route-id="@city.Idcity" method="post">
                        @Html.AntiForgeryToken()
                        <button type="submit" class="btn btn-danger btn-sm"
                                onclick="return confirm('Are you sure you want to delete {@city.Name} city?')">
                            Delete
                        </button>
                    </form>
                    <button class="btn btn-primary btn-sm update-city"
                            data-cityid="@city.Idcity"
                            data-name="@city.Name">
                        Update
                    </button>
                    <a asp-action="GetProfessionals"
                       asp-controller="CityProfessional"
                       asp-route-cityId="@city.Idcity"
                       class="btn btn-info btn-sm">
                        Professionals
                    </a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>


<div class="modal fade" id="cityModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Update City name for <span id="nameSpan"></span></h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>

            <div class="modal-body">
                <form id="cityForm" method="post">
                    <input type="hidden" id="cityIdInput" name="cityId">
                    <div class="mb-3">
                        <label for="cityNameInput" class="form-label">New City Name</label>
                        <input type="text" class="form-control" id="cityNameInput" name="name"
                               placeholder="Enter city name" required>
                    </div>
                    <button type="submit" class="btn btn-primary">Save Changes</button>
                </form>

            </div>
        </div>
    </div>
</div>


@if (Model.TotalCount > Model.PageSize)
{
    var totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
    <nav>
        <ul class="pagination">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == Model.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", new { searchTerm = Model.SearchTerm, page = i, pageSize = Model.PageSize })">@i</a>
                </li>
            }
        </ul>
    </nav>
}

@section Scripts {
    <script src="~/js/site.js"></script>
    <script>
        $(document).ready(function() {
            $('.update-city').click(function() {
                const cityId = $(this).data('cityid');
                const name = $(this).data('name');

                $('#nameSpan').text(name);
                $('#cityIdInput').val(cityId);
                $('#cityModal').modal('show');
            });

            $('#cityForm').submit(function(e) {
                e.preventDefault();
                const formData = $(this).serialize();

                $.ajax({
                    url: '@Url.Action("Update", "City")',
                    type: 'POST',
                    data: formData,
                    success: function() {
                        $('#cityModal').modal('hide');
                        alert('City updated successfully!');
                         location.reload();
                    },
                    error: function(xhr) {
                        alert('Error updating city: ' + xhr.responseText);
                    }
                });
            });
        });
    </script>
    }
